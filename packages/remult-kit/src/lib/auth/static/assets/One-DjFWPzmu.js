import{S as h,i as f,s as p,d as u,v as w,e as _,t as l,a as v,b as O,c as b,f as m,g,n as d,h as j}from"./index-CXxEdqWz.js";const y="src/One.svelte";function r(s){let e,a,c;const i={c:function(){e=_("p"),a=l("This is the component two "),c=l(s[0]),v(e,"class","s-bI1J3kYXOZac"),O(e,y,4,0,48)},l:function(o){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(o,t){b(o,e,t),m(e,a),m(e,c)},p:function(o,[t]){t&1&&g(c,o[0])},i:d,o:d,d:function(o){o&&j(e)}};return u("SvelteRegisterBlock",{block:i,id:r.name,type:"component",source:"",ctx:s}),i}function E(s,e,a){let{$$slots:c={},$$scope:i}=e;w("One",c,[]);let{name:n="world"}=e;const o=["name"];return Object.keys(e).forEach(t=>{!~o.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<One> was created with unknown prop '${t}'`)}),s.$$set=t=>{"name"in t&&a(0,n=t.name)},s.$capture_state=()=>({name:n}),s.$inject_state=t=>{"name"in t&&a(0,n=t.name)},e&&"$$inject"in e&&s.$inject_state(e.$$inject),[n]}class k extends h{constructor(e){super(e),f(this,e,E,r,p,{name:0}),u("SvelteRegisterComponent",{component:this,tagName:"One",options:e,id:r.name})}get name(){throw new Error("<One>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<One>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{k as default};
