import{S as u,i as h,s as f,d as w,v as p,e as _,t as l,a as v,b as g,c as T,f as d,g as b,n as m,h as y}from"./index-CXxEdqWz.js";const j="src/Two.svelte";function r(o){let e,a,c;const i={c:function(){e=_("p"),a=l("This is the component two "),c=l(o[0]),v(e,"class","s-ddq5wYRrSI_l"),g(e,j,4,0,45)},l:function(s){throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option")},m:function(s,t){T(s,e,t),d(e,a),d(e,c)},p:function(s,[t]){t&1&&b(c,s[0])},i:m,o:m,d:function(s){s&&y(e)}};return w("SvelteRegisterBlock",{block:i,id:r.name,type:"component",source:"",ctx:o}),i}function S(o,e,a){let{$$slots:c={},$$scope:i}=e;p("Two",c,[]);let{name:n="yo"}=e;const s=["name"];return Object.keys(e).forEach(t=>{!~s.indexOf(t)&&t.slice(0,2)!=="$$"&&t!=="slot"&&console.warn(`<Two> was created with unknown prop '${t}'`)}),o.$$set=t=>{"name"in t&&a(0,n=t.name)},o.$capture_state=()=>({name:n}),o.$inject_state=t=>{"name"in t&&a(0,n=t.name)},e&&"$$inject"in e&&o.$inject_state(e.$$inject),[n]}class x extends u{constructor(e){super(e),h(this,e,S,r,f,{name:0}),w("SvelteRegisterComponent",{component:this,tagName:"Two",options:e,id:r.name})}get name(){throw new Error("<Two>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set name(e){throw new Error("<Two>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{x as default};
